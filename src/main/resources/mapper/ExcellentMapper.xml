<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tech.dao.ExcellentMapper">
  <resultMap id="BaseResultMap" type="com.tech.pojo.Excellent">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="enroll_id" jdbcType="INTEGER" property="enrollId" />
    <result column="year" jdbcType="VARCHAR" property="year" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="compete_id" jdbcType="INTEGER" property="competeId" />
    <result column="compete_name" jdbcType="VARCHAR" property="competeName" />
    <result column="compete_level" jdbcType="INTEGER" property="competeLevel" />
    <result column="level_name" jdbcType="VARCHAR" property="levelName" />
    <result column="prize_id" jdbcType="INTEGER" property="prizeId" />
    <result column="prize_name" jdbcType="VARCHAR" property="prizeName" />
    <result column="members" jdbcType="VARCHAR" property="members" />
    <result column="instructor" jdbcType="VARCHAR" property="instructor" />
    <result column="profession_name" jdbcType="VARCHAR" property="professionName" />
    <result column="profession_id" jdbcType="INTEGER" property="professionID" />

  </resultMap>
  <sql id="Base_Column_List">
    id, year,enroll_id, title, compete_id, compete_name, compete_level, level_name, prize_id, prize_name,
    members, instructor,profession_id,profession_name
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_excellent
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tbl_excellent
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.tech.pojo.Excellent" useGeneratedKeys="true" keyProperty="id">
    insert into tbl_excellent (id, year, enroll_id, title,
      compete_id, compete_name, compete_level, 
      level_name, prize_id, prize_name, 
      members, instructor,profession_id,profession_name)
    values (#{id,jdbcType=INTEGER}, #{year,jdbcType=VARCHAR}, #{enrollId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR},
      #{competeId,jdbcType=INTEGER}, #{competeName,jdbcType=VARCHAR}, #{competeLevel,jdbcType=INTEGER}, 
      #{levelName,jdbcType=VARCHAR}, #{prizeId,jdbcType=INTEGER}, #{prizeName,jdbcType=VARCHAR}, 
      #{members,jdbcType=VARCHAR}, #{instructor,jdbcType=VARCHAR},#{professionID,jdbcType=INTEGER}, #{professionName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.tech.pojo.Excellent">
    insert into tbl_excellent
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="year != null">
        year,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="competeId != null">
        compete_id,
      </if>
      <if test="competeName != null">
        compete_name,
      </if>
      <if test="competeLevel != null">
        compete_level,
      </if>
      <if test="levelName != null">
        level_name,
      </if>
      <if test="prizeId != null">
        prize_id,
      </if>
      <if test="prizeName != null">
        prize_name,
      </if>
      <if test="members != null">
        members,
      </if>
      <if test="instructor != null">
        instructor,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="year != null">
        #{year,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="competeId != null">
        #{competeId,jdbcType=INTEGER},
      </if>
      <if test="competeName != null">
        #{competeName,jdbcType=VARCHAR},
      </if>
      <if test="competeLevel != null">
        #{competeLevel,jdbcType=INTEGER},
      </if>
      <if test="levelName != null">
        #{levelName,jdbcType=VARCHAR},
      </if>
      <if test="prizeId != null">
        #{prizeId,jdbcType=INTEGER},
      </if>
      <if test="prizeName != null">
        #{prizeName,jdbcType=VARCHAR},
      </if>
      <if test="members != null">
        #{members,jdbcType=VARCHAR},
      </if>
      <if test="instructor != null">
        #{instructor,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tech.pojo.Excellent">
    update tbl_excellent
    <set>
      <if test="year != null">
        year = #{year,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="competeId != null">
        compete_id = #{competeId,jdbcType=INTEGER},
      </if>
      <if test="competeName != null">
        compete_name = #{competeName,jdbcType=VARCHAR},
      </if>
      <if test="competeLevel != null">
        compete_level = #{competeLevel,jdbcType=INTEGER},
      </if>
      <if test="levelName != null">
        level_name = #{levelName,jdbcType=VARCHAR},
      </if>
      <if test="prizeId != null">
        prize_id = #{prizeId,jdbcType=INTEGER},
      </if>
      <if test="prizeName != null">
        prize_name = #{prizeName,jdbcType=VARCHAR},
      </if>
      <if test="members != null">
        members = #{members,jdbcType=VARCHAR},
      </if>
      <if test="instructor != null">
        instructor = #{instructor,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tech.pojo.Excellent">
    update tbl_excellent
    set year = #{year,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      compete_id = #{competeId,jdbcType=INTEGER},
      compete_name = #{competeName,jdbcType=VARCHAR},
      compete_level = #{competeLevel,jdbcType=INTEGER},
      level_name = #{levelName,jdbcType=VARCHAR},
      prize_id = #{prizeId,jdbcType=INTEGER},
      prize_name = #{prizeName,jdbcType=VARCHAR},
      members = #{members,jdbcType=VARCHAR},
      instructor = #{instructor,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectAllCount" resultType="java.lang.Integer">
    select count(*) from tbl_excellent
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tbl_excellent
  </select>
  <select id="selectByLevelId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tbl_excellent where compete_level = #{id}
  </select>
    <select id="selectGetPrizeItemCountByLevelId" resultType="java.lang.Integer">
      select count(*) from tbl_excellent where compete_level = #{id}
    </select>
  <select id="selectNumberOfPeopleByPrizeIDLevelID" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tbl_excellent where compete_level = #{levelId} and prize_id = #{prizeId}
  </select>
  <select id="selectPrizePeopleCountByCompeteLevel" resultType="java.lang.Integer">
      select count(*) from vm_excellent where compete_level = #{levelId}
   </select>
  <select id="selectPrizeItemCountByCompeteLevelWithSelective" resultType="java.lang.Integer">
      select count(*) from tbl_excellent where compete_level = #{levelId}
    <if test="time != null">
      and year BETWEEN SUBSTRING_INDEX(#{time}, '~', 1)  and SUBSTRING_INDEX(#{time}, '~', -1)
    </if>
    <if test="pId != null">
      and profession_id = #{pId}
    </if>
  </select>
  <select id="selectPrizePeopleCountByLevelIdPrizeIdWithSelective" resultType="java.lang.Integer">
      select count(*) from vm_excellent_member where compete_level = #{levelId} and prize_id = #{prizeId}
    <if test="time != null">
      and year BETWEEN SUBSTRING_INDEX(#{time}, '~', 1)  and SUBSTRING_INDEX(#{time}, '~', -1)
    </if>
    <if test="pId != null">
      and profession_id = #{pId}
    </if>
  </select>
  <select id="selectPrizeItemCountByLevelIdPrizeIdWithSelective" resultType="java.lang.Integer">
      select count(*) from tbl_excellent where compete_level = #{levelId} and prize_id = #{prizeId}
    <if test="time != null">
      and year BETWEEN SUBSTRING_INDEX(#{time}, '~', 1)  and SUBSTRING_INDEX(#{time}, '~', -1)
    </if>
    <if test="pId != null">
      and profession_id = #{pId}
    </if>
  </select>
  <select id="selectPrizePeopleCountByCompeteLevelWithSelective" resultType="java.lang.Integer">
    select count(*) from vm_excellent_member e where e.compete_level = #{levelId}
    <if test="time != null">
      and e.year BETWEEN SUBSTRING_INDEX(#{time}, '~', 1)  and SUBSTRING_INDEX(#{time}, '~', -1)
    </if>
    <if test="pId != null">
      and profession_id = #{pId}
    </if>
  </select>
  <select id="selectSearchCount" resultType="java.lang.Integer">
      select count(*) from tbl_excellent where  title like CONCAT('%',#{key},'%')
  </select>
  <select id="selectSearch" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tbl_excellent where title like CONCAT('%',#{key},'%')
  </select>
  <select id="selectSelectiveCount" resultType="java.lang.Integer" parameterType="map">
    select count(*) from tbl_excellent  where 1 = 1
    <if test="time != null">
      and year BETWEEN SUBSTRING_INDEX(#{time}, '~', 1)  and SUBSTRING_INDEX(#{time}, '~', -1)
    </if>
    <if test="pId != null">
      and profession_id = #{pId}
    </if>
  </select>
  <select id="selectSelective" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tbl_excellent where 1 = 1
    <if test="time != null">
      and year BETWEEN SUBSTRING_INDEX(#{time}, '~', 1)  and SUBSTRING_INDEX(#{time}, '~', -1)
    </if>
    <if test="pId != null">
      and profession_id = #{pId}
    </if>
  </select>
  <select id="selectPIdByPName" resultType="java.lang.Integer">
    select id from tbl_profession where pname = #{professionName}
  </select>
  <select id="selectPrizeItemBySno" resultType="com.tech.pojo.Excellent">
    select
        id, year, title, compete_id, compete_name, compete_level, level_name, prize_id, prize_name,
    members, instructor,profession_id,profession_name
    from vm_excellent_member where sno = #{sno}
  </select>

</mapper>