<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tech.dao.StudentMapper">
  <resultMap id="BaseResultMap" type="com.tech.pojo.Student">
    <id column="sno" jdbcType="VARCHAR" property="sno" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="name_student" jdbcType="VARCHAR" property="nameStudent" />
    <result column="classno" jdbcType="VARCHAR" property="classno" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="qq" jdbcType="VARCHAR" property="qq" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="imgurl" jdbcType="VARCHAR" property="imgurl" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="pname" jdbcType="VARCHAR" property="pname" />
  </resultMap>
  <sql id="Base_Column_List">
    sno, password, name_student, classno, phone, qq, email, imgurl, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_student
    where sno = #{sno,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tbl_student
    where sno = #{sno,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.tech.pojo.Student">
    insert into tbl_student (sno, password, name_student, 
      classno, phone, qq, 
      email, imgurl, update_time
      )
    values (#{sno,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{nameStudent,jdbcType=VARCHAR}, 
      #{classno,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{imgurl,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.tech.pojo.Student">
    insert into tbl_student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sno != null">
        sno,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="nameStudent != null">
        name_student,
      </if>
      <if test="classno != null">
        classno,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="qq != null">
        qq,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="imgurl != null">
        imgurl,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sno != null">
        #{sno,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="nameStudent != null">
        #{nameStudent,jdbcType=VARCHAR},
      </if>
      <if test="classno != null">
        #{classno,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="imgurl != null">
        #{imgurl,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tech.pojo.Student">
    update tbl_student
    <set>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="nameStudent != null">
        name_student = #{nameStudent,jdbcType=VARCHAR},
      </if>
      <if test="classno != null">
        classno = #{classno,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        qq = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="imgurl != null">
        imgurl = #{imgurl,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where sno = #{sno,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tech.pojo.Student">
    update tbl_student
    set password = #{password,jdbcType=VARCHAR},
      name_student = #{nameStudent,jdbcType=VARCHAR},
      classno = #{classno,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      imgurl = #{imgurl,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where sno = #{sno,jdbcType=VARCHAR}
  </update>
    <update id="updatePasswordBySno" parameterType="map" >
      update tbl_student set password = #{newPwd} where sno = #{sno}
    </update>
    <select id="selectLogin" resultMap="BaseResultMap" parameterType="java.lang.String">
    select
      <include refid="Base_Column_List" />
     from tbl_student
    where sno = #{sno}
  </select>
  <select id="selectBySnoAndPwd" resultType="java.lang.Integer" parameterType="map">
    SELECT count(1) from tbl_student where sno = #{sno} and password = #{oldPwd}
  </select>
    <select id="selectPartBySno" resultMap="BaseResultMap">
      select sno,name_student,classno from tbl_student where sno = #{sno}
    </select>
    <select id="selectAllCount" resultType="java.lang.Integer">
      SELECT COUNT(*) from tbl_student
    </select>
  <select id="selectAllStudent" resultMap="BaseResultMap">
    SELECT
    sno, password, name_student, classno, phone, qq, email, imgurl, update_time,pname
    from tbl_student s,tbl_profession p where s.profession_id = p.id
  </select>
  <select id="selectInfoExceptPwdBySno" resultMap="BaseResultMap" parameterType="string">
    SELECT
    sno, name_student, classno, phone, qq, email, imgurl, update_time
    FROM
    tbl_student where sno = #{sno}
  </select>
    <select id="selectSearchCount" resultType="java.lang.Integer">
      select count(*)
      from tbl_student where (sno like CONCAT('%',#{key},'%') or name_student like CONCAT('%',#{key},'%'))
    </select>
  <select id="selectSearch" resultMap="BaseResultMap">
     SELECT
    sno, password, name_student, classno, phone, qq, email, imgurl, update_time,pname
    from tbl_student s,tbl_profession p where s.profession_id = p.id and (sno like CONCAT('%',#{key},'%') or name_student like CONCAT('%',#{key},'%'))
  </select>
    <select id="selectPidBySno" resultType="java.lang.Integer">
      select profession_id from tbl_student where sno = #{sno}
    </select>
</mapper>